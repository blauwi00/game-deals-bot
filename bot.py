import requests
import asyncio
import json
import os
import random
from aiogram import Bot
from datetime import datetime

# –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
TELEGRAM_BOT_TOKEN = "7934109371:AAGZnZbBmLaw2Esap1vAEcI7Pd0YaJ6xQgc"
TELEGRAM_CHANNEL_ID = "@gamehunttm"  # –ò–ª–∏ "-100XXXXXXXXXX" –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
POSTER_URL = "https://i.imgur.com/AhzG3kO.jpeg"  # –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç–µ—Ä
MIN_DISCOUNT = 10  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
MAX_GAMES = 10  # –°–∫–æ–ª—å–∫–æ –∏–≥—Ä –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –æ–¥–Ω–æ–º –ø–æ—Å—Ç–µ

bot = Bot(token=TELEGRAM_BOT_TOKEN)

# –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
DISCOUNTS_FILE = "discounts.json"
LAST_POSTED_FILE = "last_posted.json"

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å–∫–∏–¥–æ–∫
def load_json(filename):
    if os.path.exists(filename):
        with open(filename, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫
def save_json(filename, data):
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–∫–∏–¥–æ–∫ –∏–∑ Steam API
def get_all_steam_deals():
    url = "https://api.steampowered.com/ISteamApps/GetAppList/v2/"  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        all_apps = data.get("applist", {}).get("apps", [])
        print(f"–í—Å–µ–≥–æ –∏–≥—Ä –≤ Steam: {len(all_apps)}")

        game_ids = [str(game["appid"]) for game in all_apps]
        return game_ids[:5000]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã–±–æ—Ä 5000 –∏–≥—Ä–∞–º–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    else:
        print(f"–û—à–∏–±–∫–∞ Steam API: –ö–æ–¥ {response.status_code}")
        return []

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Å–∫–∏–¥–æ–∫
def get_steam_deals():
    game_ids = get_all_steam_deals()
    if not game_ids:
        return ["–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –∏–∑ Steam API."]

    url = f"https://store.steampowered.com/api/appdetails?appids={','.join(game_ids)}"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        old_discounts = load_json(DISCOUNTS_FILE)
        last_posted_games = load_json(LAST_POSTED_FILE)
        new_discounts = {}
        deals = []
        selected_games = []

        for game_id, details in data.items():
            if details.get("success"):
                game_data = details.get("data", {})
                if "price_overview" in game_data and "discount_percent" in game_data["price_overview"]:
                    discount = game_data["price_overview"]["discount_percent"]
                    if discount >= MIN_DISCOUNT:
                        name = game_data.get("name", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                        price_old = game_data["price_overview"].get("initial", 0) / 100
                        price_new = game_data["price_overview"].get("final", 0) / 100
                        currency = game_data["price_overview"].get("currency", "USD")
                        link = f"https://store.steampowered.com/app/{game_id}/"
                        image = game_data.get("header_image", POSTER_URL)

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—à–ª—É—é —Å–∫–∏–¥–∫—É
                        previous_discount = old_discounts.get(game_id, None)
                        discount_text = f"-{discount}%"
                        if previous_discount and previous_discount != discount:
                            discount_text += f" (–†–∞–Ω–µ–µ –±—ã–ª–æ -{previous_discount}%)"

                        # –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏
                        discount_expiration = game_data.get("price_overview", {}).get("discount_expiration", None)
                        if discount_expiration:
                            expiration_date = datetime.utcfromtimestamp(discount_expiration).strftime("%d.%m.%Y")
                            expiration_text = f"‚è≥ –°–∫–∏–¥–∫–∞ –¥–æ {expiration_date}"
                        else:
                            expiration_text = "‚è≥ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞"

                        # –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                        platforms = []
                        if game_data.get("platforms", {}).get("windows"):
                            platforms.append("üñ• Windows")
                        if game_data.get("platforms", {}).get("mac"):
                            platforms.append("üçè Mac")
                        if game_data.get("platforms", {}).get("linux"):
                            platforms.append("üêß Linux")
                        platforms_text = " | ".join(platforms) if platforms else "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞"

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—É–±–ª–∏–∫–æ–≤–∞–ª–∏ –ª–∏ —É–∂–µ —ç—Ç—É –∏–≥—Ä—É
                        if game_id not in last_posted_games:
                            new_discounts[game_id] = discount
                            selected_games.append(game_id)

                            deals.append(
                                {
                                    "name": name,
                                    "discount": discount_text,
                                    "price_old": price_old,
                                    "price_new": price_new,
                                    "currency": currency,
                                    "platforms": platforms_text,
                                    "expiration": expiration_text,
                                    "link": link,
                                    "image": image
                                }
                            )

                        if len(deals) >= MAX_GAMES:
                            break

        save_json(DISCOUNTS_FILE, new_discounts)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫–∏–¥–∫–∏
        save_json(LAST_POSTED_FILE, selected_games)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
        print(f"–ò—Ç–æ–≥: {len(deals)} –∏–≥—Ä –ø—Ä–æ—à–ª–æ —Ñ–∏–ª—å—Ç—Ä.")  

        return deals if deals else ["–°–∫–∏–¥–æ–∫ –Ω–µ—Ç –∏–ª–∏ API Steam –Ω–µ –¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ."]
    
    else:
        print(f"–û—à–∏–±–∫–∞ Steam API: –ö–æ–¥ {response.status_code}")
        return ["–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Steam."]

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞ —Å –ø–æ—Å—Ç–µ—Ä–æ–º –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
async def send_discount_post():
    deals = get_steam_deals()
    if isinstance(deals, list) and isinstance(deals[0], str):
        print("–ù–µ—Ç —Å–∫–∏–¥–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏!")
        return

    message = "<b>üî• –ì–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ –≤ Steam!</b>\n\n"
    for deal in deals:
        message += f"<b>{deal['name']}</b>\n"
        message += f"{deal['discount']}\n"
        message += f"{deal['price_old']} {deal['currency']} ‚Üí {deal['price_new']} {deal['currency']}\n"
        message += f"{deal['platforms']}\n"
        message += f"{deal['expiration']}\n"
        message += f"<a href='{deal['link']}'>üéÆ –ö—É–ø–∏—Ç—å –≤ Steam</a>\n\n"

    message += "üìå –ü–æ–¥–ø–∏—à–∏—Å—å, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–µ —Å–∫–∏–¥–∫–∏!"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –∏ –ø–æ—Å—Ç–µ—Ä–æ–º (–≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)
    await bot.send_photo(TELEGRAM_CHANNEL_ID, photo=POSTER_URL, caption=message, parse_mode="HTML")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (2 –ø–æ—Å—Ç–∞, –∑–∞—Ç–µ–º —Å—Ç–æ–ø)
async def test_run():
    for _ in range(2):  # –û—Ç–ø—Ä–∞–≤–∏—Ç 2 –ø–æ—Å—Ç–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è
        await send_discount_post()
        await asyncio.sleep(10)

# –ó–∞–ø—É—Å–∫
async def main():
    await test_run()
    await bot.session.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é —Å–µ—Å—Å–∏—é

asyncio.run(main())
