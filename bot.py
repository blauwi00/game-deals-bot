import asyncio
import aiohttp
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
import random

# üîë –¢–æ–∫–µ–Ω –∏ –∫–∞–Ω–∞–ª
TOKEN = "7934109371:AAGZnZbBmLaw2Esap1vAEcI7Pd0YaJ6xQgc"
TELEGRAM_CHANNEL_ID = "@gamehunttm"

# üîç API —Å—Å—ã–ª–∫–∏
STEAM_API_URL = "https://store.steampowered.com/api/featuredcategories/"
EPIC_API_URL = "https://store-site-backend-static.ak.epicgames.com/freeGamesPromotions"

# üéØ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ —Å Steam API
async def get_steam_discounts():
    async with aiohttp.ClientSession() as session:
        async with session.get(STEAM_API_URL) as response:
            if response.status != 200:
                logging.error(f"–û—à–∏–±–∫–∞ Steam API: {response.status}")
                return []
            data = await response.json()
            if "specials" not in data:
                return []

            discounts = []
            for game in data["specials"]["items"]:
                if game.get("discount_percent", 0) > 0:
                    discounts.append({
                        "name": game["name"],
                        "discount": game["discount_percent"],
                        "price_old": game["original_price"] / 100 if game["original_price"] else "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                        "price_new": game["final_price"] / 100 if game["final_price"] else "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
                        "link": f"https://store.steampowered.com/app/{game['id']}",
                        "image": game.get("header_image", ""),
                        "source": "Steam"
                    })
            return discounts

# üìå –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∫–∏–¥–æ–∫ —Å Epic Games Store API
async def get_epic_discounts():
    async with aiohttp.ClientSession() as session:
        async with session.get(EPIC_API_URL) as response:
            if response.status != 200:
                logging.error(f"–û—à–∏–±–∫–∞ Epic Games API: {response.status}")
                return []
            data = await response.json()
            games = data.get("data", {}).get("Catalog", {}).get("searchStore", {}).get("elements", [])
            
            discounts = []
            for game in games:
                title = game.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞")
                price_info = game.get("price", {}).get("totalPrice", {})
                discount = price_info.get("discountPercentage", 0)

                if discount > 0:  # –¢–æ–ª—å–∫–æ –∏–≥—Ä—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏
                    price_old = price_info.get("originalPrice", 0) / 100
                    price_new = price_info.get("discountPrice", 0) / 100
                    game_link = f"https://store.epicgames.com/p/{game['productSlug']}"
                    image = game.get("keyImages", [{}])[0].get("url", "")

                    discounts.append({
                        "name": title,
                        "discount": discount,
                        "price_old": price_old,
                        "price_new": price_new,
                        "link": game_link,
                        "image": image,
                        "source": "Epic Games"
                    })
            return discounts

# üìå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–∫–∏–¥–∫–∞–º–∏
async def generate_discount_message():
    steam_discounts = await get_steam_discounts()
    epic_discounts = await get_epic_discounts()
    
    all_discounts = steam_discounts + epic_discounts
    if not all_discounts:
        return "üö´ –ù–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∫–∏–¥–æ–∫.", None, None

    # –í—ã–±–∏—Ä–∞–µ–º 5 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∫–∏–¥–æ–∫
    selected_deals = random.sample(all_discounts, min(5, len(all_discounts)))

    message = "<b>üî• –ì–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ –≤ Steam –∏ Epic Games:</b>\n\n"
    buttons = InlineKeyboardMarkup(row_width=1)

    for deal in selected_deals:
        price_info = f"<s>{deal['price_old']} USD</s> ‚û° {deal['price_new']} USD"
        message += (
            f"üéÆ <b>{deal['name']}</b>\n"
            f"üí≤ {price_info}\n"
            f"üî• –°–∫–∏–¥–∫–∞: {deal['discount']}%\n"
            f"üìå –ò—Å—Ç–æ—á–Ω–∏–∫: {deal['source']}\n\n"
        )

        # –ö–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å" –∏ "–°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã"
        buttons.add(
            InlineKeyboardButton("üõí –ö—É–ø–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ", url=deal["link"]),
            InlineKeyboardButton("üìä –°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã", url=f"https://gg.deals/games/?title={deal['name'].replace(' ', '+')}")
        )

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∏–≥—Ä—ã
    post_image = selected_deals[0]["image"] if selected_deals[0]["image"] else "https://i.imgur.com/AhzG3kO.jpeg"

    return message, buttons, post_image

# üìå –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞
async def send_discount_post():
    message, buttons, post_image = await generate_discount_message()
    if not message:
        return

    await bot.send_photo(TELEGRAM_CHANNEL_ID, photo=post_image, caption=message, reply_markup=buttons)

# üìå –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ—Å—Ç–æ–≤ (—Ä–∞–∑ –≤ 3 –º–∏–Ω—É—Ç—ã)
async def scheduler():
    while True:
        await send_discount_post()
        await asyncio.sleep(180)  # 3 –º–∏–Ω—É—Ç—ã

# üìå –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    asyncio.create_task(scheduler())
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
