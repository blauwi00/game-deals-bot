import asyncio
import aiohttp
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
import random

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID –∫–∞–Ω–∞–ª–∞
TOKEN = "7934109371:AAGZnZbBmLaw2Esap1vAEcI7Pd0YaJ6xQgc"
TELEGRAM_CHANNEL_ID = "@gamehunttm"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

# API URL –¥–ª—è Steam –∏ SteamDB
STEAM_API_URL = "https://store.steampowered.com/api/featuredcategories/"
STEAMDB_API_URL = "https://steamdb.info/api/GetPriceOverview/"

# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ —Å Steam API
async def get_steam_discounts():
    async with aiohttp.ClientSession() as session:
        async with session.get(STEAM_API_URL) as response:
            if response.status != 200:
                logging.error(f"–û—à–∏–±–∫–∞ Steam API: {response.status}")
                return []
            data = await response.json()
            if "specials" not in data:
                logging.warning("Steam API –Ω–µ –≤–µ—Ä–Ω—É–ª —Å–ø–∏—Å–æ–∫ —Å–∫–∏–¥–æ–∫!")
                return []

            discounts = []
            for game in data["specials"]["items"]:
                if game.get("discount_percent", 0) > 0:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∞
                    discounts.append({
                        "name": game["name"],
                        "discount": game["discount_percent"],
                        "price_old": game["original_price"] / 100 if game["original_price"] else "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                        "price_new": game["final_price"] / 100 if game["final_price"] else "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
                        "link": f"https://store.steampowered.com/app/{game['id']}",
                        "source": "Steam"
                    })
            return discounts

# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ —Å SteamDB API
async def get_steamdb_discounts(app_id):
    async with aiohttp.ClientSession() as session:
        params = {"appid": app_id}
        async with session.get(STEAMDB_API_URL, params=params) as response:
            if response.status != 200:
                logging.error(f"–û—à–∏–±–∫–∞ SteamDB API: {response.status}")
                return None
            data = await response.json()
            if "data" not in data:
                return None

            return {
                "regions": data["data"]["prices"],
                "source": "SteamDB"
            }

# üìå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–∫–∏–¥–∫–∞–º–∏
async def generate_discount_message():
    steam_discounts = await get_steam_discounts()
    if not steam_discounts:
        return "üö´ –ù–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∫–∏–¥–æ–∫."

    # –í—ã–±–∏—Ä–∞–µ–º 5 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ –¥–ª—è –ø–æ—Å—Ç–∞
    selected_deals = random.sample(steam_discounts, min(5, len(steam_discounts)))

    message = "<b>üî• –ì–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ –≤ Steam:</b>\n\n"
    buttons = InlineKeyboardMarkup(row_width=2)

    for deal in selected_deals:
        steamdb_info = await get_steamdb_discounts(deal["link"].split("/")[-1])
        price_info = f"<s>{deal['price_old']} USD</s> ‚û° {deal['price_new']} USD"
        region_prices = ""

        if steamdb_info:
            for region, price in steamdb_info["regions"].items():
                region_prices += f"\nüá¶üá∑ {region}: {price} USD"

        message += (
            f"üéÆ <b>{deal['name']}</b>\n"
            f"üí≤ {price_info}\n"
            f"üî• –°–∫–∏–¥–∫–∞: {deal['discount']}%\n"
            f"üó∫ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã:{region_prices}\n"
            f"üìå –ò—Å—Ç–æ—á–Ω–∏–∫: {deal['source']}\n\n"
        )

        # –ö–Ω–æ–ø–∫–∏
        buttons.add(
            InlineKeyboardButton(f"üõí –ö—É–ø–∏—Ç—å –∑–∞ {deal['price_new']} USD", url=deal["link"]),
            InlineKeyboardButton("üìä –°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã", url=f"https://steamdb.info/app/{deal['link'].split('/')[-1]}/")
        )

    return message, buttons

# üìå –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞
async def send_discount_post():
    message, buttons = await generate_discount_message()
    await bot.send_message(TELEGRAM_CHANNEL_ID, message, reply_markup=buttons)
    await bot.send_photo(TELEGRAM_CHANNEL_ID, photo="https://i.imgur.com/AhzG3kO.jpeg")  # –ü–æ—Å—Ç–µ—Ä

# üìå –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ—Å—Ç–æ–≤ (—Ä–∞–∑ –≤ 3 –º–∏–Ω—É—Ç—ã)
async def scheduler():
    while True:
        await send_discount_post()
        await asyncio.sleep(180)  # 3 –º–∏–Ω—É—Ç—ã

# üìå –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    asyncio.create_task(scheduler())
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
