import asyncio
import aiohttp
import json
import datetime
from aiogram import Bot, Dispatcher
from aiogram.types import ParseMode

# –¢–≤–æ–π Telegram-–±–æ—Ç
TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"
TELEGRAM_CHANNEL_ID = "@gamehunttm"

# –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏–≥—Ä
sent_games = {}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ –∏–∑ Steam API
async def get_steam_discounts():
    url = "https://store.steampowered.com/api/featuredcategories/"
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    all_deals = []

                    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º —Å–∫–∏–¥–æ–∫
                    for category in data["specials"]["items"]:
                        game = {
                            "name": category["name"],
                            "discount": category["discount_percent"],
                            "price_old": category["original_price"] / 100 if category.get("original_price") else None,
                            "price_new": category["final_price"] / 100 if category.get("final_price") else None,
                            "link": f"https://store.steampowered.com/app/{category['id']}",
                            "image": category.get("header_image", ""),
                        }
                        all_deals.append(game)

                    return all_deals[:30]  # –ë–µ—Ä–µ–º —Ç–æ–ø 30 —Å–∫–∏–¥–æ–∫ (–±–æ–ª—å—à–µ –≤—ã–±–æ—Ä–∫–∏)
                else:
                    print("–û—à–∏–±–∫–∞ Steam API:", response.status)
                    return []
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Steam:", str(e))
            return []

# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ 5 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤
def get_unique_discounts(all_deals):
    global sent_games
    unique_deals = []
    
    for deal in all_deals:
        game_id = deal["link"]
        new_discount = deal["discount"]
        
        if game_id not in sent_games:
            sent_games[game_id] = new_discount
            unique_deals.append(deal)
        
        elif sent_games[game_id] != new_discount:
            deal["previous_discount"] = sent_games[game_id]
            sent_games[game_id] = new_discount
            unique_deals.append(deal)

        if len(unique_deals) == 5:
            break

    return unique_deals

# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞
def create_message(deals):
    message = "<b>üî• –ì–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ –≤ Steam!</b>\n\n"
    
    for deal in deals:
        message += f"üéÆ <b>{deal['name']}</b>\n"
        message += f"üí∞ {deal['price_old']} USD ‚ûú <b>{deal['price_new']} USD</b>\n"
        message += f"üî• –°–∫–∏–¥–∫–∞: <b>{deal['discount']}%</b>\n"
        if "previous_discount" in deal:
            message += f"üîÑ (–ü—Ä–æ—à–ª–∞—è —Å–∫–∏–¥–∫–∞: {deal['previous_discount']}%)\n"
        message += f"üîó <a href='{deal['link']}'>–ö—É–ø–∏—Ç—å –≤ Steam</a>\n\n"

    message += "üìå –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Å–∫–∏–¥–∫–∏!\n"
    return message

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞
async def send_discount_post():
    bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
    
    all_deals = await get_steam_discounts()
    unique_deals = get_unique_discounts(all_deals)

    if unique_deals:
        message = create_message(unique_deals)
        await bot.send_photo(TELEGRAM_CHANNEL_ID, "https://i.imgur.com/AhzG3kO.jpeg", caption=message, parse_mode=ParseMode.HTML)
    else:
        await bot.send_message(TELEGRAM_CHANNEL_ID, "üö´ –ù–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∫–∏–¥–æ–∫.")

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ—Å—Ç–æ–≤ (—Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç)
async def scheduler():
    while True:
        await send_discount_post()
        await asyncio.sleep(1800)  # 30 –º–∏–Ω—É—Ç

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    asyncio.create_task(scheduler())
    await asyncio.Event().wait()

asyncio.run(main())